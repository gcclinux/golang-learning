package main

import (
	"fmt"
	"strings"
)

func main() {
	fmt.Println()
	name := "Hello World"
	fmt.Println("String:", name)

	// String is a collection / slice of bytes
	fmt.Println()
	fmt.Println("Bytes")
	for i := 0; i < len(name); i++ {
		fmt.Printf("%x ", name[i])
	}

	fmt.Println()
	fmt.Println()

	// Rune is nothing more than a 32bit integer
	fmt.Println("Index\tRune\tString")
	for x, y := range name {
		fmt.Println(x, "\t", y, "\t", string(y))
	}
	fmt.Println()

	name = "Γειά σου Κόσμε"
	fmt.Println("Index\tRune\tString")
	for x, y := range name {
		fmt.Println(x, "\t", y, "\t", string(y))
	}

	fmt.Println()
	fmt.Println("Three ways to join strings together")
	fmt.Println()
	h := "Hello, "
	w := "world!"

	//using + is not effecient
	myString := h + w
	fmt.Println(myString)
	fmt.Println()

	// using fmt to join - more efficient
	myString = fmt.Sprintf("%s%s", h, w)
	fmt.Println(myString)
	fmt.Println()

	// using stringbuilder - very  efficient
	var sb strings.Builder
	sb.WriteString(h)
	sb.WriteString(w)
	fmt.Println(sb.String())

	fmt.Println()
	name = "ABCDEFGHIJKLMNOPQRSTVWYXZ"
	fmt.Println("Getting a substring")
	fmt.Println(name[10:13]) // subtring range of characters between 10 & 13

}
